@using SO.Application.Features.Queries.ProposalModule.Proposal.GetByIdProposal
@model GetByIdProposalQueryResponse

@{
    ViewData["Title"] = "Edit Proposal";
    var proposal = Model.Result as SO.Application.DTOs.ProposalModule.Proposal.SingleProposal;
    var currentStep = proposal.CurrentStep;
}

<div class="container-fluid">
    <!-- Success Message -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert" style="position: fixed; top: 20px; right: 20px; z-index: 9999; min-width: 300px;">
            <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Modern Header with Step Progress -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    <!-- Header Section -->
                    <div class="proposal-header">
                        <div class="header-top">
                            <div class="header-left">
                                <div class="page-title-wrapper">
                                    <div>
                                        <h1 class="page-title">Teklifi Düzenle</h1>
                                        <div class="project-name-section">
                                            <span class="project-label">Proje Adı:</span>
                                            <span class="project-name">@proposal.ProposalName</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="header-right">
                                <a asp-action="ExportToWord" asp-route-id="@proposal.Id" class="btn btn-success btn-lg">
                                    <i class="fas fa-file-word me-2"></i>Word'e Aktar
                                </a>
                            </div>
                        </div>
                        
                        <div class="header-meta">
                            <div class="meta-item">
                                <span class="meta-label">Proje Kodu</span>
                                <span class="meta-value"><i class="fas fa-barcode me-1"></i>@proposal.ProposalCode</span>
                            </div>
                            <div class="meta-divider"></div>
                            <div class="meta-item">
                                <span class="meta-label">Müşteri Firması</span>
                                <span class="meta-value"><i class="fas fa-building me-1"></i>@proposal.CompanyName</span>
                            </div>
                            <div class="meta-divider"></div>
                            <div class="meta-item meta-status">
                                <span class="meta-label">Proje Durumu</span>
                                <select id="proposalStatusDropdown" class="status-select" 
                                        data-proposal-id="@proposal.Id"
                                        data-current-status="@proposal.Status">
                                    <option value="1">📋 Taslak</option>
                                    <option value="2">📨 Gönderildi</option>
                                    <option value="3">✅ Onaylandı</option>
                                    <option value="4">❌ Reddedildi</option>
                                    <option value="5">⛔ İptal Edildi</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Step Progress Indicator -->
                    <div class="progress-container mt-4">
                        <div class="d-flex justify-content-between align-items-center position-relative">
                            <div class="progress-line"></div>
                            <!-- Step 1 -->
                            <div class="step-item @(currentStep >= 1 ? "completed" : "")">
                                <div class="step-circle @(currentStep >= 1 ? "bg-success" : "bg-secondary")">
                                    @if (currentStep > 1) {
                                        <i class="fas fa-check text-white"></i>
                                    } else {
                                        <span class="text-white">1</span>
                                    }
                                </div>
                                <div class="step-label">Genel Tanım</div>
                            </div>
                            <!-- Step 2 -->
                            <div class="step-item @(currentStep >= 2 ? "completed" : "")">
                                <div class="step-circle @(currentStep >= 2 ? "bg-success" : "bg-secondary")">
                                    @if (currentStep > 2) {
                                        <i class="fas fa-check text-white"></i>
                                    } else {
                                        <span class="text-white">2</span>
                                    }
                                </div>
                                <div class="step-label">Ticari Bilgiler</div>
                            </div>
                            <!-- Step 3 -->
                            <div class="step-item @(currentStep >= 3 ? "completed" : "")">
                                <div class="step-circle @(currentStep >= 3 ? "bg-success" : "bg-secondary")">
                                    @if (currentStep > 3) {
                                        <i class="fas fa-check text-white"></i>
                                    } else {
                                        <span class="text-white">3</span>
                                    }
                                </div>
                                <div class="step-label">Riskler</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modern Form Layout -->
    <div class="row">
        <div class="col-12">
            <div class="accordion" id="proposalAccordion">
                <!-- 1. Genel Tanım -->
                <div class="accordion-item border-0 shadow-sm mb-3">
                    <h2 class="accordion-header" id="headingGeneral">
                        <button class="accordion-button @(currentStep != 1 ? "collapsed" : "") bg-white text-dark border-0 shadow-sm" 
                                type="button" 
                                data-bs-toggle="collapse" 
                                data-bs-target="#collapseGeneral" 
                                aria-expanded="@(currentStep == 1 ? "true" : "false")" 
                                aria-controls="collapseGeneral">
                            <div class="d-flex align-items-center w-100">
                                <span class="badge @(currentStep >= 2 ? "bg-success" : "bg-primary") me-3 px-3 py-2">
                                    @if (currentStep > 1) {
                                        <i class="fas fa-check"></i>
                                    } else {
                                        <text>1</text>
                                    }
                                </span>
                                <div>
                                    <h5 class="mb-0">Genel Tanım</h5>
                                    <small class="text-muted">Proje bilgileri ve müşteri detayları</small>
                                </div>
                                @if (currentStep > 1) {
                                    <span class="badge bg-success ms-auto">✓ Tamamlandı - Düzenlenebilir</span>
                                }
                            </div>
                        </button>
                    </h2>
                    <div id="collapseGeneral" class="accordion-collapse collapse @(currentStep == 1 ? "show" : "")" aria-labelledby="headingGeneral" data-bs-parent="#proposalAccordion">
                        <div class="accordion-body bg-light">
                            <form asp-action="UpdateSummary" asp-route-id="@proposal.Id" method="post" id="generalForm">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="CurrentStep" value="1" />
                                <input type="hidden" name="NextStep" value="@(currentStep == 1 ? 2 : currentStep)" />
                                
                                <!-- Proje Bilgileri -->
                                <div class="card mb-4">
                                    <div class="card-header bg-primary text-white">
                                        <h6 class="mb-0"><i class="fas fa-project-diagram me-2"></i>Proje Bilgileri</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row g-3">
                                            <!-- 1.1 Firma Adı -->
                                            <div class="col-md-6">
                                                <label class="form-label fw-bold">Firma Adı</label>
                                                <input class="form-control" value="@proposal.CompanyName" readonly />
                                            </div>
                                            <!-- 1.2 Proje Adı -->
                                            <div class="col-md-6">
                                                <label class="form-label fw-bold">Proje Adı</label>
                                                <input name="ProposalName" class="form-control" value="@proposal.ProposalName" />
                                            </div>
                                            <!-- 1.3 Proje Kapsamı -->
                                            <div class="col-12">
                                                <label class="form-label fw-bold">Proje Kapsamı <span class="text-danger">*</span></label>
                                                <div class="position-relative">
                                                    <textarea name="ProjectDescription" id="projectDescription" class="form-control smart-textarea" rows="4" maxlength="1000" required placeholder="Proje kapsamını detaylı olarak açıklayın... (Maksimum 1000 karakter)">@proposal.ProjectDescription</textarea>
                                                    <small class="text-muted position-absolute char-counter" style="bottom: 5px; right: 10px; font-size: 0.75rem;">
                                                        <span class="char-count">@(proposal.ProjectDescription?.Length ?? 0)</span>/1000
                                                    </small>
                                                </div>
                                            </div>
                                            <!-- 1.4 Proje Sorumlusu (Hazırlayan) -->
                                            <div class="col-md-6">
                                                <label class="form-label fw-bold">Proje Sorumlusu</label>
                                                <input class="form-control" value="@proposal.PreparedBy" readonly />
                                            </div>
                                            <!-- 1.6 Kullanıcı Adı -->
                                            <div class="col-md-6">
                                                <label class="form-label fw-bold">Kullanıcı Adı</label>
                                                <input class="form-control" value="@User?.Identity?.Name" readonly />
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Müşteri Bilgileri -->
                                <div class="card mb-4">
                                    <div class="card-header bg-success text-white">
                                        <h6 class="mb-0"><i class="fas fa-building me-2"></i>Müşteri Bilgileri</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row g-3">
                                            <!-- 1.5 Müşteri Adı -->
                                            <div class="col-md-6">
                                                <label class="form-label fw-bold">Müşteri Adı</label>
                                                <input id="customerName" name="CustomerName" class="form-control" value="@proposal.CustomerName" readonly />
                                            </div>
                                            <!-- 1.7 İletişim No -->
                                            <div class="col-md-6">
                                                <label class="form-label fw-bold">İletişim Numarası</label>
                                                <input id="customerPhone" name="CustomerPhone" class="form-control" value="@proposal.CustomerPhone" readonly />
                                            </div>
                                            <!-- 1.10 Mail -->
                                            <div class="col-md-6">
                                                <label class="form-label fw-bold">E-posta Adresi</label>
                                                <input id="customerEmail" name="CustomerEmail" type="email" class="form-control" value="@proposal.CustomerEmail" readonly />
                                            </div>
                                            <!-- 1.8 Faks -->
                                            <div class="col-md-6">
                                                <label class="form-label fw-bold">Faks Numarası</label>
                                                <input id="customerFax" name="CustomerFax" class="form-control" value="@proposal.CustomerFax" readonly />
                                            </div>
                                            <!-- 1.9 Adres -->
                                            <div class="col-md-6">
                                                <label class="form-label fw-bold">Adres</label>
                                                <input id="customerAddress" name="CustomerAddress" class="form-control" value="@proposal.CustomerAddress" readonly />
                                                <input type="hidden" id="addressId" name="AddressId" value="@proposal.AddressId" />
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Proje Detayları -->
                                <div class="card mb-4">
                                    <div class="card-header bg-warning text-dark">
                                        <h6 class="mb-0"><i class="fas fa-cogs me-2"></i>Proje Detayları</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row g-3">
                                            <!-- 1.11 Teklif Süresi -->
                                            <div class="col-md-4">
                                                <label class="form-label fw-bold">Teklif Süresi (gün) <span class="text-danger">*</span></label>
                                                <input name="OfferDurationDays" type="text" class="form-control" value="@proposal.OfferDurationDays" placeholder="Gün sayısı (örn: 30)" required />
                                            </div>
                                            <!-- 1.12 Teslim Süresi -->
                                            <div class="col-md-4">
                                                <label class="form-label fw-bold">Teslim Süresi (gün) <span class="text-danger">*</span></label>
                                                <input name="DeliveryDurationDays" type="text" class="form-control" value="@proposal.DeliveryDurationDays" placeholder="Gün sayısı (örn: 60)" required />
                                            </div>
                                            <!-- 1.13 Teklif Sorumlusu -->
                                            <div class="col-md-4">
                                                <label class="form-label fw-bold">Teklif Sorumlusu <span class="text-danger">*</span></label>
                                                <input name="OfferOwner" class="form-control" value="@proposal.OfferOwner" placeholder="Sorumlu kişi" required />
                                            </div>
                                            <!-- 1.14 Miktar (Birim/Adet) -->
                                            <div class="col-md-8">
                                                <label class="form-label fw-bold">Miktar <span class="text-danger">*</span></label>
                                                <div class="input-group">
                                                    <input name="QuantityValue" type="text" class="form-control" value="@proposal.QuantityValue" placeholder="Miktar (örn: 100 veya 100.5)" required />
                                                    <select id="quantityUnit" name="QuantityUnit" class="form-select" required>
                                                        <option value="">Birim seçin</option>
                                                        @if (proposal.QuantityUnit == "Birim")
                                                        {
                                                            <option value="Birim" selected>Birim</option>
                                                            <option value="Adet">Adet</option>
                                                        }
                                                        else if (proposal.QuantityUnit == "Adet")
                                                        {
                                                            <option value="Birim">Birim</option>
                                                            <option value="Adet" selected>Adet</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="Birim">Birim</option>
                                                            <option value="Adet">Adet</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                            <!-- 1.15 Not -->
                                            <div class="col-12">
                                                <label class="form-label fw-bold">Not</label>
                                                <div class="position-relative">
                                                    <textarea name="GeneralNote" id="generalNote" class="form-control smart-textarea" rows="3" maxlength="500" placeholder="Ek notlar... (Maksimum 500 karakter)">@proposal.GeneralNote</textarea>
                                                    <small class="text-muted position-absolute char-counter" style="bottom: 5px; right: 10px; font-size: 0.75rem;">
                                                        <span class="char-count">@(proposal.GeneralNote?.Length ?? 0)</span>/500
                                                    </small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Form Actions -->
                                <div class="d-flex justify-content-between align-items-center mt-4 p-3 bg-white rounded shadow-sm">
                                    <div class="text-muted">
                                        @if (currentStep == 1)
                                        {
                                            <small><i class="fas fa-info-circle me-1"></i>Bilgileriniz kaydedilecek ve 2. adıma geçilecektir.</small>
                                        }
                                        else
                                        {
                                            <small><i class="fas fa-info-circle me-1"></i>Değişiklikleriniz kaydedilecektir.</small>
                                        }
                                    </div>
                                    <button type="submit" class="btn btn-primary btn-lg px-4">
                                        @if (currentStep == 1)
                                        {
                                            <i class="fas fa-arrow-right me-2"></i><text>Kaydet ve 2. Adıma Geç</text>
                                        }
                                        else
                                        {
                                            <i class="fas fa-save me-2"></i><text>Kaydet</text>
                                        }
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- 2. Ticari -->
                <div class="accordion-item border-0 shadow-sm mb-3">
                    <h2 class="accordion-header" id="headingCommercial">
                        <button class="accordion-button @(currentStep != 2 ? "collapsed" : "") bg-white text-dark border-0 shadow-sm @(currentStep < 2 ? "disabled" : "")" 
                                type="button" 
                                data-bs-toggle="collapse" 
                                data-bs-target="#collapseCommercial" 
                                aria-expanded="@(currentStep == 2 ? "true" : "false")" 
                                aria-controls="collapseCommercial"
                                @(currentStep < 2 ? "disabled" : "")>
                            <div class="d-flex align-items-center w-100">
                                <span class="badge @(currentStep >= 3 ? "bg-success" : (currentStep >= 2 ? "bg-primary" : "bg-secondary")) me-3 px-3 py-2">
                                    @if (currentStep > 2) {
                                        <i class="fas fa-check"></i>
                                    } else {
                                        <text>2</text>
                                    }
                                </span>
                                <div>
                                    <h5 class="mb-0">Ticari Bilgiler</h5>
                                    <small class="text-muted">Fiyat, ödeme ve rekabet bilgileri</small>
                                </div>
                                @if (currentStep < 2) {
                                    <span class="badge bg-secondary ms-auto"><i class="fas fa-lock me-1"></i>1. Adımı Tamamlayın</span>
                                } else if (currentStep > 2) {
                                    <span class="badge bg-success ms-auto">✓ Tamamlandı - Düzenlenebilir</span>
                                }
                            </div>
                        </button>
                    </h2>
                    <div id="collapseCommercial" class="accordion-collapse collapse @(currentStep == 2 ? "show" : "")" aria-labelledby="headingCommercial" data-bs-parent="#proposalAccordion">
                        <div class="accordion-body bg-light">
                            <form asp-action="UpdateSummary" asp-route-id="@proposal.Id" method="post" id="commercialForm">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="Id" value="@proposal.Id" />
                                <input type="hidden" name="CurrentStep" value="2" />
                                <input type="hidden" name="NextStep" value="@(currentStep == 2 ? 3 : currentStep)" />

                                <!-- Fiyat ve Ödeme Bilgileri -->
                                <div class="card mb-4">
                                    <div class="card-header bg-primary text-white">
                                        <h6 class="mb-0"><i class="fas fa-dollar-sign me-2"></i>Fiyat ve Ödeme Bilgileri</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row g-3">
                                            <!-- Hedef Fiyat -->
                                            <div class="col-md-6">
                                                <label class="form-label fw-bold">Hedef Fiyat <span class="text-danger">*</span></label>
                                                <div class="input-group">
                                                    <input name="TargetPrice" type="text" class="form-control" value="@proposal.TargetPrice" placeholder="Fiyat girin (örn: 100000 veya 100.000)" required />
                                                    <span class="input-group-text">@proposal.Currency</span>
                                                </div>
                                            </div>
                                            <!-- Ödeme Metodu -->
                                            <div class="col-md-6">
                                                <label class="form-label fw-bold">Ödeme Metodu <span class="text-danger">*</span></label>
                                                <input name="PaymentMethod" class="form-control" placeholder="Ödeme yöntemi" value="@proposal.PaymentMethod" required />
                                            </div>
                                            <!-- Ödeme Vadesi -->
                                            <div class="col-md-6">
                                                <label class="form-label fw-bold">Ödeme Vadesi <span class="text-danger">*</span></label>
                                                <input name="PaymentTerm" class="form-control" placeholder="Ödeme süresi" value="@proposal.PaymentTerm" required />
                                            </div>
                                            <!-- Geçerlilik Tarihi -->
                                            <div class="col-md-6">
                                                <label class="form-label fw-bold">Geçerlilik Tarihi <span class="text-danger">*</span></label>
                                                <input name="ValidUntilDate" type="date" class="form-control" value="@(proposal.ValidUntilDate?.ToString("yyyy-MM-dd"))" required />
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <!-- Rekabet Edilen Firmalar Tablosu -->
                                <div class="card mb-4">
                                    <div class="card-header bg-info text-white">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <h6 class="mb-0"><i class="fas fa-building me-2"></i>Rekabet Edilen Firmalar</h6>
                                            <button type="button" class="btn btn-light btn-sm" id="addCompetitionCompanyBtn">
                                                <i class="fas fa-plus me-1"></i>Firma Ekle
                                            </button>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <div class="table-responsive">
                                            <table class="table table-hover" id="competitionCompaniesTable">
                                                <thead class="table-light">
                                                    <tr>
                                                        <th>Firma Adı</th>
                                                        <th>Rekabet Edilen Fiyat</th>
                                                        <th>Notlar</th>
                                                        <th width="100">İşlemler</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="competitionCompaniesBody">
                                                    <!-- Dinamik olarak eklenecek -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>

                                <!-- İş Ortakları Tablosu -->
                                <div class="card mb-4">
                                    <div class="card-header bg-warning text-dark">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <h6 class="mb-0"><i class="fas fa-handshake me-2"></i>İş Ortakları</h6>
                                            <button type="button" class="btn btn-light btn-sm" id="addBusinessPartnerBtn">
                                                <i class="fas fa-plus me-1"></i>Ortak Ekle
                                            </button>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <div class="table-responsive">
                                            <table class="table table-hover" id="businessPartnersTable">
                                                <thead class="table-light">
                                                    <tr>
                                                        <th>Ortak Adı</th>
                                                        <th>Rolü</th>
                                                        <th>İletişim Bilgisi</th>
                                                        <th>Notlar</th>
                                                        <th width="100">İşlemler</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="businessPartnersBody">
                                                    <!-- Dinamik olarak eklenecek -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>

                                <!-- Notlar -->
                                <div class="card mb-4">
                                    <div class="card-header bg-secondary text-white">
                                        <h6 class="mb-0"><i class="fas fa-sticky-note me-2"></i>Notlar</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="position-relative">
                                            <textarea name="CommercialNote" id="commercialNote" class="form-control smart-textarea" rows="3" maxlength="500" placeholder="Ticari notlarınızı buraya yazın... (Maksimum 500 karakter)">@proposal.CommercialNote</textarea>
                                            <small class="text-muted position-absolute char-counter" style="bottom: 5px; right: 10px; font-size: 0.75rem;">
                                                <span class="char-count">@(proposal.CommercialNote?.Length ?? 0)</span>/500
                                            </small>
                                        </div>
                                    </div>
                                </div>

                                <!-- Form Actions -->
                                <div class="d-flex justify-content-between align-items-center mt-4 p-3 bg-white rounded shadow-sm">
                                    <div class="text-muted">
                                        @if (currentStep == 2)
                                        {
                                            <small><i class="fas fa-info-circle me-1"></i>Ticari bilgileriniz kaydedilecek ve 3. adıma geçilecektir.</small>
                                        }
                                        else
                                        {
                                            <small><i class="fas fa-info-circle me-1"></i>Değişiklikleriniz kaydedilecektir.</small>
                                        }
                                    </div>
                                    <button type="submit" class="btn btn-success btn-lg px-4">
                                        @if (currentStep == 2)
                                        {
                                            <i class="fas fa-arrow-right me-2"></i><text>Kaydet ve 3. Adıma Geç</text>
                                        }
                                        else
                                        {
                                            <i class="fas fa-save me-2"></i><text>Kaydet</text>
                                        }
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- 3. Riskler / Varsayımlar -->
                <div class="accordion-item border-0 shadow-sm mb-3">
                    <h2 class="accordion-header" id="headingRisks">
                        <button class="accordion-button @(currentStep != 3 ? "collapsed" : "") bg-white text-dark border-0 shadow-sm @(currentStep < 3 ? "disabled" : "")" 
                                type="button" 
                                data-bs-toggle="collapse" 
                                data-bs-target="#collapseRisks" 
                                aria-expanded="@(currentStep == 3 ? "true" : "false")" 
                                aria-controls="collapseRisks"
                                @(currentStep < 3 ? "disabled" : "")>
                            <div class="d-flex align-items-center w-100">
                                <span class="badge @(currentStep >= 4 ? "bg-success" : (currentStep >= 3 ? "bg-primary" : "bg-secondary")) me-3 px-3 py-2">
                                    @if (currentStep > 3) {
                                        <i class="fas fa-check"></i>
                                    } else {
                                        <text>3</text>
                                    }
                                </span>
                                <div>
                                    <h5 class="mb-0">Riskler / Varsayımlar</h5>
                                    <small class="text-muted">Proje risk faktörleri ve açıklamaları</small>
                                </div>
                                @if (currentStep < 3) {
                                    <span class="badge bg-secondary ms-auto"><i class="fas fa-lock me-1"></i>2. Adımı Tamamlayın</span>
                                } else if (currentStep > 3) {
                                    <span class="badge bg-success ms-auto">✓ Tamamlandı - Düzenlenebilir</span>
                                }
                            </div>
                        </button>
                    </h2>
                    <div id="collapseRisks" class="accordion-collapse collapse @(currentStep == 3 ? "show" : "")" aria-labelledby="headingRisks" data-bs-parent="#proposalAccordion">
                        <div class="accordion-body bg-light">
                            <form id="risksForm">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="ProposalId" value="@proposal.Id" />
                                
                                <!-- Riskler Tablosu -->
                                <div class="card mb-4">
                                    <div class="card-header bg-danger text-white">
                                        <h6 class="mb-0"><i class="fas fa-exclamation-triangle me-2"></i>Risk Faktörleri</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="table-responsive">
                                            <table class="table table-hover" id="risksTable">
                                                <thead class="table-light">
                                                    <tr>
                                                        <th width="30">#</th>
                                                        <th width="200">Risk Faktörü</th>
                                                        <th>Açıklama</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="risksBody">
                                                    <!-- Dinamik olarak eklenecek -->
                                                </tbody>
                                            </table>
                                        </div>
                                        <div class="alert alert-info mt-3">
                                            <i class="fas fa-info-circle me-2"></i>
                                            <strong>Not:</strong> Risk başlıkları sistem tarafından önceden tanımlanmıştır. Sadece açıklama alanlarını doldurunuz.
                                        </div>
                                    </div>
                                </div>

                                <!-- Form Actions -->
                                <div class="d-flex justify-content-between align-items-center mt-4 p-3 bg-white rounded shadow-sm">
                                    <div class="text-muted">
                                        @if (currentStep == 3)
                                        {
                                            <small><i class="fas fa-info-circle me-1"></i>Risk bilgileriniz kaydedilecektir.</small>
                                        }
                                        else
                                        {
                                            <small><i class="fas fa-info-circle me-1"></i>Değişiklikleriniz kaydedilecektir.</small>
                                        }
                                    </div>
                                    <button type="submit" class="btn btn-danger btn-lg px-4">
                                        <i class="fas fa-save me-2"></i>Riskleri Kaydet
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Firma seçildiğinde müşteri ve adres bilgilerini doldur
            const accountId = '@proposal.AccountId';
            if (accountId) {
                // Müşteri temel bilgileri
                $.get('/Accounts/GetById', { id: accountId }, function (a) {
                    if (!a) return;
                    $('#customerName').val(a.companyName || '');
                    $('#customerPhone').val(a.phoneNumber || '');
                    $('#customerEmail').val(a.email || '');
                });
                // Adres bilgisi (Line1) otomatik yazılsın
                $.get('/Addresses/GetByAccount', { accountId: accountId }, function (list) {
                    window.__addrCache = list || [];
                    // Öncelik: AddressId -> varsayılan adres -> ilk adres
                    var preferred = null;
                    var currentId = '@(proposal.AddressId?.ToString() ?? "")';
                    if (currentId) {
                        preferred = (list || []).find(function(x){ return x.id === currentId; });
                    }
                    if (!preferred) {
                        preferred = (list || []).find(function(x){ return x.isDefault; }) || (list || [])[0];
                    }
                    if (preferred) {
                        $('#addressId').val(preferred.id);
                        $('#customerAddress').val(preferred.addressLine1 || preferred.addressLine || '');
                        $('#customerFax').val(preferred.fax || '');
                    }
                });
            }

            // Mevcut veriler loadCommercialData() fonksiyonunda yükleniyor

            // Artık dropdown yok; kullanıcıya otomatik gösteriliyor

            // QuantityUnit değerini modelden set et
            var unit = '@(proposal.QuantityUnit ?? "")';
            if (unit) {
                $('#quantityUnit').val(unit);
            }


            // Genel Tanım AJAX kaydet → Adım 2'ye geç
            $('#generalForm').on('submit', function (e) {
                e.preventDefault();
                var form = $(this);
                
                // Form validation
                var isValid = true;
                var errorMessage = '';
                
                // Teklif Süresi kontrolü
                var offerDuration = form.find('input[name="OfferDurationDays"]').val();
                if (!offerDuration || offerDuration <= 0) {
                    isValid = false;
                    errorMessage += 'Teklif Süresi (gün) alanı zorunludur ve 0\'dan büyük olmalıdır.\n';
                }
                
                // Teslim Süresi kontrolü
                var deliveryDuration = form.find('input[name="DeliveryDurationDays"]').val();
                if (!deliveryDuration || deliveryDuration <= 0) {
                    isValid = false;
                    errorMessage += 'Teslim Süresi (gün) alanı zorunludur ve 0\'dan büyük olmalıdır.\n';
                }
                
                // Teklif Sorumlusu kontrolü
                var offerOwner = form.find('input[name="OfferOwner"]').val();
                if (!offerOwner || offerOwner.trim() === '') {
                    isValid = false;
                    errorMessage += 'Teklif Sorumlusu alanı zorunludur.\n';
                }
                
                // Miktar kontrolü
                var quantityValue = form.find('input[name="QuantityValue"]').val();
                // Virgülü noktaya çevir
                quantityValue = quantityValue.replace(',', '.');
                if (!quantityValue || parseFloat(quantityValue) <= 0) {
                    isValid = false;
                    errorMessage += 'Miktar alanı zorunludur ve 0\'dan büyük olmalıdır.\n';
                }
                
                // Birim kontrolü
                var quantityUnit = form.find('select[name="QuantityUnit"]').val();
                if (!quantityUnit || quantityUnit === '') {
                    isValid = false;
                    errorMessage += 'Birim seçimi zorunludur.\n';
                }
                
                if (!isValid) {
                    showValidationError(errorMessage);
                    return false;
                }
                
                
                // Form'daki virgülleri noktaya çevir
                form.find('input[type="number"]').each(function() {
                    var $this = $(this);
                    var value = $this.val();
                    if (value && value.includes(',')) {
                        $this.val(value.replace(',', '.'));
                    }
                });
                
                var data = form.serialize();
                var btn = form.find('button[type="submit"]');
                var original = btn.html();
                btn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-2"></span>Kaydediliyor...');
                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: data,
                    headers: { 'X-Requested-With': 'XMLHttpRequest' },
                    success: function (res) {
                        btn.prop('disabled', false).html(original);
                        var currentPageStep = @currentStep;
                        if (currentPageStep == 1) {
                            showSuccessMessage('Genel tanım bilgileri kaydedildi! 2. adıma geçiliyor...');
                        } else {
                            showSuccessMessage('Genel tanım bilgileri güncellendi!');
                        }
                        // Sayfayı yenile
                        setTimeout(function() {
                            window.location.reload();
                        }, 1500);
                    },
                    error: function () {
                        btn.prop('disabled', false).html(original);
                        showValidationError('Kaydetme sırasında bir hata oluştu.');
                    }
                });
            });

            // Ticari (2. adım) kaydet → Adım 3'e geç
            $('#commercialForm').on('submit', function (e) {
                e.preventDefault();
                
                // Ticari alanların zorunlu validasyonu
                var isValid = true;
                var errorMessage = '';

                // Hedef Fiyat kontrolü
                var targetPrice = $('input[name="TargetPrice"]').val();
                // Virgülü noktaya çevir
                targetPrice = targetPrice.replace(',', '.');
                if (!targetPrice || parseFloat(targetPrice) <= 0) {
                    isValid = false;
                    errorMessage += 'Hedef Fiyat alanı zorunludur ve 0\'dan büyük olmalıdır.\n';
                }

                // Ödeme Metodu kontrolü
                var paymentMethod = $('input[name="PaymentMethod"]').val();
                if (!paymentMethod || paymentMethod.trim() === '') {
                    isValid = false;
                    errorMessage += 'Ödeme Metodu alanı zorunludur.\n';
                }

                // Ödeme Vadesi kontrolü
                var paymentTerm = $('input[name="PaymentTerm"]').val();
                if (!paymentTerm || paymentTerm.trim() === '') {
                    isValid = false;
                    errorMessage += 'Ödeme Vadesi alanı zorunludur.\n';
                }

                // Geçerlilik Tarihi kontrolü
                var validUntilDate = $('input[name="ValidUntilDate"]').val();
                if (!validUntilDate || validUntilDate.trim() === '') {
                    isValid = false;
                    errorMessage += 'Geçerlilik Tarihi alanı zorunludur.\n';
                }

                if (!isValid) {
                    showValidationError(errorMessage);
                    return false;
                }

                // Loading göster
                var btn = $(this).find('button[type="submit"]');
                var original = btn.html();
                btn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-2"></span>Kaydediliyor...');
                
                
                // Form'daki virgülleri noktaya çevir - sadece sayısal alanlar için
                $('#commercialForm').find('input[name*="Price"], input[name*="Value"], input[name*="Days"]').each(function() {
                    var $this = $(this);
                    var value = $this.val();
                    if (value && value.includes(',')) {
                        $this.val(value.replace(',', '.'));
                    }
                });
                
                // AJAX ile form gönder
                var form = $(this);
                var data = form.serialize();
                
                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: data,
                    headers: { 'X-Requested-With': 'XMLHttpRequest' },
                    success: function (res) {
                        if (res.success) {
                            // Ana form başarıyla kaydedildi, şimdi tablo verilerini kaydet
                            saveTableData(btn, original);
                        } else {
                            btn.prop('disabled', false).html(original);
                            showValidationError(res.message || 'Bilinmeyen hata');
                        }
                    },
                    error: function (xhr, status, error) {
                        btn.prop('disabled', false).html(original);
                        showValidationError('Kaydetme sırasında bir hata oluştu: ' + error);
                    }
                });
            });

            // Tablo verilerini kaydeden fonksiyon
            async function saveTableData(btn, original) {
                try {
                    // Competition Companies verilerini topla ve kaydet
                    await saveCompetitionCompaniesData();
                    
                    // Business Partners verilerini topla ve kaydet
                    await saveBusinessPartnersData();
                    
                    // Başarılı mesaj göster ve sayfayı yenile
                    btn.prop('disabled', false).html(original);
                    var currentPageStep = @currentStep;
                    if (currentPageStep == 2) {
                        showSuccessMessage('Ticari bilgiler başarıyla kaydedildi! 3. adıma geçiliyor...');
                    } else {
                        showSuccessMessage('Ticari bilgiler güncellendi!');
                    }
                    setTimeout(function(){ 
                        window.location.reload();
                    }, 1500);
                    
                } catch (error) {
                    btn.prop('disabled', false).html(original);
                    showValidationError('Tablo verileri kaydedilirken bir hata oluştu: ' + error);
                }
            }

            // Competition Companies verilerini kaydet
            async function saveCompetitionCompaniesData() {
                console.log('Saving competition companies data...');
                
                // Tablodaki tüm satırları al
                var companies = [];
                $('#competitionCompaniesBody tr').each(function() {
                    var row = $(this);
                    var companyName = row.find('input[name="companyName"]').val();
                    var competedPrice = row.find('input[name="competedPrice"]').val();
                    var notes = row.find('input[name="notes"]').val();
                    var rowId = row.attr('id').replace('competition_', '');
                    
                    if (companyName && companyName.trim() !== '') {
                        companies.push({
                            id: rowId.startsWith('new_') ? null : rowId,
                            proposalId: '@proposal.Id',
                            companyName: companyName.trim(),
                            competedPrice: competedPrice ? parseFloat(competedPrice) : null,
                            notes: notes ? notes.trim() : ''
                        });
                    }
                });
                
                console.log('Found competition companies:', companies.length);
                
                // Her bir company için API çağrısı yap
                for (var i = 0; i < companies.length; i++) {
                    var company = companies[i];
                    
                    if (company.id) {
                        // Mevcut kayıt - güncelle
                        await $.ajax({
                            url: '/Proposals/UpdateCompetitionCompany',
                            type: 'POST',
                            data: JSON.stringify(company),
                            contentType: 'application/json',
                            dataType: 'json',
                            success: function(response) {
                                if (response.success) {
                                    console.log('Competition company updated:', company.id);
                                } else {
                                    console.error('Error updating competition company:', response.message);
                                }
                            },
                            error: function(xhr, status, error) {
                                console.error('Error updating competition company:', error);
                                console.error('Response:', xhr.responseText);
                            }
                        });
                    } else {
                        // Yeni kayıt - oluştur
                        await $.ajax({
                            url: '/Proposals/CreateCompetitionCompany',
                            type: 'POST',
                            data: JSON.stringify(company),
                            contentType: 'application/json',
                            dataType: 'json',
                            success: function(response) {
                                if (response.success) {
                                    console.log('Competition company created:', response.id);
                                } else {
                                    console.error('Error creating competition company:', response.message);
                                }
                            },
                            error: function(xhr, status, error) {
                                console.error('Error creating competition company:', error);
                                console.error('Response:', xhr.responseText);
                            }
                        });
                    }
                }
            }

            // Business Partners verilerini kaydet
            async function saveBusinessPartnersData() {
                console.log('Saving business partners data...');
                
                // Tablodaki tüm satırları al
                var partners = [];
                $('#businessPartnersBody tr').each(function() {
                    var row = $(this);
                    var partnerName = row.find('input[name="partnerName"]').val();
                    var role = row.find('input[name="role"]').val();
                    var contactInfo = row.find('input[name="contactInfo"]').val();
                    var notes = row.find('input[name="notes"]').val();
                    var rowId = row.attr('id').replace('partner_', '');
                    
                    if (partnerName && partnerName.trim() !== '') {
                        partners.push({
                            id: rowId.startsWith('new_') ? null : rowId,
                            proposalId: '@proposal.Id',
                            partnerName: partnerName.trim(),
                            role: role ? role.trim() : '',
                            contactInfo: contactInfo ? contactInfo.trim() : '',
                            notes: notes ? notes.trim() : ''
                        });
                    }
                });
                
                console.log('Found business partners:', partners.length);
                
                // Her bir partner için API çağrısı yap
                for (var i = 0; i < partners.length; i++) {
                    var partner = partners[i];
                    
                    if (partner.id) {
                        // Mevcut kayıt - güncelle
                        await $.ajax({
                            url: '/Proposals/UpdateBusinessPartner',
                            type: 'POST',
                            data: JSON.stringify(partner),
                            contentType: 'application/json',
                            dataType: 'json',
                            success: function(response) {
                                if (response.success) {
                                    console.log('Business partner updated:', partner.id);
                                } else {
                                    console.error('Error updating business partner:', response.message);
                                }
                            },
                            error: function(xhr, status, error) {
                                console.error('Error updating business partner:', error);
                                console.error('Response:', xhr.responseText);
                            }
                        });
                    } else {
                        // Yeni kayıt - oluştur
                        await $.ajax({
                            url: '/Proposals/CreateBusinessPartner',
                            type: 'POST',
                            data: JSON.stringify(partner),
                            contentType: 'application/json',
                            dataType: 'json',
                            success: function(response) {
                                if (response.success) {
                                    console.log('Business partner created:', response.id);
                                } else {
                                    console.error('Error creating business partner:', response.message);
                                }
                            },
                            error: function(xhr, status, error) {
                                console.error('Error creating business partner:', error);
                                console.error('Response:', xhr.responseText);
                            }
                        });
                    }
                }
            }

            // Sayfa yüklendiğinde ticari verilerin doğru şekilde görünmesini sağla
            function loadCommercialData() {
                console.log('loadCommercialData called');
                
                // Ticari alanları doldur
                $('input[name="TargetPrice"]').val('@(proposal.TargetPrice?.ToString("F2") ?? "")');
                $('input[name="PaymentMethod"]').val('@(proposal.PaymentMethod ?? "")');
                $('input[name="PaymentTerm"]').val('@(proposal.PaymentTerm ?? "")');
                $('input[name="ValidUntilDate"]').val('@(proposal.ValidUntilDate?.ToString("yyyy-MM-dd") ?? "")');
                $('textarea[name="CommercialNote"]').val('@(proposal.CommercialNote ?? "")');
                
                console.log('loadCommercialData completed');
            }

            // Sayfa yüklendiğinde ticari verileri yükle
            loadCommercialData();
            
            // Tablo verilerini yükle
            loadCompetitionCompanies();
            loadBusinessPartners();
            loadProposalRisks();
            
            // Akıllı metin alanlarını başlat
            initSmartTextareas();
            
            // Status dropdown - Set initial value
            var currentStatus = $('#proposalStatusDropdown').data('current-status');
            var statusValue = getStatusValue(currentStatus);
            $('#proposalStatusDropdown').val(statusValue);
            
            // Helper function to get status value
            function getStatusValue(statusKey) {
                var statusMap = {
                    'Draft': 1,
                    'Sent': 2,
                    'Approved': 3,
                    'Rejected': 4,
                    'Cancelled': 5
                };
                return statusMap[statusKey] || 1;
            }
            
            // Status dropdown değişikliği
            $('#proposalStatusDropdown').on('change', function() {
                const $dropdown = $(this);
                const proposalId = $dropdown.data('proposal-id');
                const newStatus = $dropdown.val();
                const originalValue = $dropdown.find('option:selected').val();
                
                // Onay mesajı
                if (confirm('Teklif durumunu değiştirmek istediğinizden emin misiniz?')) {
                    // Loading göster
                    $dropdown.prop('disabled', true);
                    
                    $.ajax({
                        url: '/Proposals/UpdateProposalStatus',
                        type: 'POST',
                        data: {
                            proposalId: proposalId,
                            status: newStatus
                        },
                        success: function(response) {
                            if (response.success) {
                                showSuccessMessage('✅ Teklif durumu başarıyla güncellendi!');
                                // Sayfa yenilenir
                                setTimeout(function() {
                                    window.location.reload();
                                }, 1500);
                            } else {
                                showValidationError(response.message || 'Durum güncellenirken bir hata oluştu');
                                $dropdown.prop('disabled', false);
                            }
                        },
                        error: function(xhr, status, error) {
                            showValidationError('Durum güncellenirken bir hata oluştu: ' + error);
                            $dropdown.prop('disabled', false);
                        }
                    });
                } else {
                    // İptal edildi, eski değere dön
                    $dropdown.val(originalValue);
                }
            });
            
            // Buton event handler'larını bağla - document ready içinde
            $(document).ready(function() {
                console.log('Document ready - binding button events');
                
                $('#addCompetitionCompanyBtn').off('click').on('click', function(e) {
                    e.preventDefault();
                    console.log('Competition company button clicked via jQuery');
                    addCompetitionCompany();
                });
                
                $('#addBusinessPartnerBtn').off('click').on('click', function(e) {
                    e.preventDefault();
                    console.log('Business partner button clicked via jQuery');
                    addBusinessPartner();
                });
                
                console.log('Button events bound successfully');
                
                // Test: Butonların varlığını kontrol et
                console.log('Competition button exists:', $('#addCompetitionCompanyBtn').length > 0);
                console.log('Business partner button exists:', $('#addBusinessPartnerBtn').length > 0);
            });
            
            
            // Validation hata mesajını gösteren fonksiyon
            function showValidationError(message) {
                // Önceki hata mesajlarını temizle
                $('.validation-error-alert').remove();
                
                var errorAlert = $('<div class="alert alert-danger validation-error-alert alert-dismissible fade show" role="alert" style="position: fixed; top: 80px; right: 20px; z-index: 9999; min-width: 300px; max-width: 500px;">' +
                    '<i class="fas fa-exclamation-triangle me-2"></i><strong>Hata:</strong><br/>' + message +
                    '<button type="button" class="btn-close" data-bs-dismiss="alert"></button>' +
                    '</div>');
                
                $('body').append(errorAlert);
                
                // 5 saniye sonra otomatik kapat
                setTimeout(function() {
                    errorAlert.alert('close');
                }, 5000);
            }

            function showSuccessMessage(message) {
                // Önceki mesajları temizle
                $('.alert-success').remove();
                
                var alertDiv = $('<div class="alert alert-success alert-dismissible fade show" role="alert" style="position: fixed; top: 20px; right: 20px; z-index: 9999; min-width: 300px;">' +
                    '<i class="fas fa-check-circle me-2"></i>' + message +
                    '<button type="button" class="btn-close" data-bs-dismiss="alert"></button>' +
                    '</div>');
                $('body').append(alertDiv);
                
                // 3 saniye sonra otomatik kapat
                setTimeout(function() {
                    alertDiv.alert('close');
                }, 3000);
            }

            // ===== REKABET EDİLEN FİRMALAR TABLOSU =====
            function loadCompetitionCompanies() {
                $.get('/Proposals/GetCompetitionCompanies', { proposalId: '@proposal.Id' }, function(data) {
                    var tbody = $('#competitionCompaniesBody');
                    tbody.empty();
                    
                    if (data && data.length > 0) {
                        data.forEach(function(company) {
                            addCompetitionCompanyRow(company);
                        });
                    }
                }).fail(function() {
                    console.error('Error loading competition companies');
                });
            }

            function addCompetitionCompany() {
                console.log('addCompetitionCompany called');
                var newCompany = {
                    id: null,
                    proposalId: '@proposal.Id',
                    companyName: '',
                    competedPrice: null,
                    notes: ''
                };
                addCompetitionCompanyRow(newCompany);
            }

            function addCompetitionCompanyRow(company) {
                var rowId = company.id || 'new_' + Date.now();
                var row = `
                    <tr id="competition_${rowId}">
                        <td>
                            <input type="text" class="form-control form-control-sm" 
                                   name="companyName"
                                   value="${company.companyName || ''}" 
                                   onchange="updateCompetitionCompany('${rowId}', 'companyName', this.value)">
                        </td>
                        <td>
                            <input type="number" class="form-control form-control-sm" 
                                   name="competedPrice"
                                   value="${company.competedPrice || ''}" 
                                   step="0.01" 
                                   onchange="updateCompetitionCompany('${rowId}', 'competedPrice', this.value)">
                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm" 
                                   name="notes"
                                   value="${company.notes || ''}" 
                                   onchange="updateCompetitionCompany('${rowId}', 'notes', this.value)">
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger btn-sm" 
                                    onclick="deleteCompetitionCompany('${rowId}')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                `;
                $('#competitionCompaniesBody').append(row);
            }

            function updateCompetitionCompany(rowId, field, value) {
                var isNew = rowId.startsWith('new_');
                var companyId = isNew ? null : rowId;
                
                if (isNew) {
                    // Yeni kayıt oluştur
                    var companyData = {
                        proposalId: '@proposal.Id',
                        companyName: '',
                        competedPrice: null,
                        notes: ''
                    };
                    
                    // Mevcut satırdaki değerleri al
                    var row = $(`#competition_${rowId}`);
                    companyData.companyName = row.find('input[onchange*="companyName"]').val();
                    companyData.competedPrice = parseFloat(row.find('input[onchange*="competedPrice"]').val()) || null;
                    companyData.notes = row.find('input[onchange*="notes"]').val();
                    
                    // Tüm alanlar dolu ise kaydet
                    if (companyData.companyName.trim() !== '') {
                        $.ajax({
                            url: '/Proposals/CreateCompetitionCompany',
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify(companyData),
                            success: function(response) {
                                if (response.success) {
                                    // Satır ID'sini güncelle
                                    $(`#competition_${rowId}`).attr('id', `competition_${response.id}`);
                                    $(`#competition_${response.id} input`).each(function() {
                                        var onchange = $(this).attr('onchange');
                                        $(this).attr('onchange', onchange.replace(rowId, response.id));
                                    });
                                }
                            }
                        });
                    }
                } else {
                    // Mevcut kaydı güncelle
                    var companyData = {
                        id: companyId,
                        proposalId: '@proposal.Id',
                        companyName: '',
                        competedPrice: null,
                        notes: ''
                    };
                    
                    var row = $(`#competition_${rowId}`);
                    companyData.companyName = row.find('input[onchange*="companyName"]').val();
                    companyData.competedPrice = parseFloat(row.find('input[onchange*="competedPrice"]').val()) || null;
                    companyData.notes = row.find('input[onchange*="notes"]').val();
                    
                    $.ajax({
                        url: '/Proposals/UpdateCompetitionCompany',
                        type: 'PUT',
                        contentType: 'application/json',
                        data: JSON.stringify(companyData),
                        success: function(response) {
                            if (!response.success) {
                                console.error('Error updating competition company:', response.message);
                            }
                        }
                    });
                }
            }

            function deleteCompetitionCompany(rowId) {
                var isNew = rowId.startsWith('new_');
                
                if (isNew) {
                    // Yeni satır ise sadece DOM'dan kaldır
                    $(`#competition_${rowId}`).remove();
                } else {
                    // Mevcut kayıt ise sunucudan sil
                    $.ajax({
                        url: '/Proposals/DeleteCompetitionCompany',
                        type: 'DELETE',
                        data: { id: rowId },
                        success: function(response) {
                            if (response.success) {
                                $(`#competition_${rowId}`).remove();
                            } else {
                                console.error('Error deleting competition company:', response.message);
                            }
                        }
                    });
                }
            }

            // ===== İŞ ORTAKLARI TABLOSU =====
            function loadBusinessPartners() {
                $.get('/Proposals/GetBusinessPartners', { proposalId: '@proposal.Id' }, function(data) {
                    var tbody = $('#businessPartnersBody');
                    tbody.empty();
                    
                    if (data && data.length > 0) {
                        data.forEach(function(partner) {
                            addBusinessPartnerRow(partner);
                        });
                    }
                }).fail(function() {
                    console.error('Error loading business partners');
                });
            }

            function addBusinessPartner() {
                console.log('addBusinessPartner called');
                var newPartner = {
                    id: null,
                    proposalId: '@proposal.Id',
                    partnerName: '',
                    role: '',
                    contactInfo: '',
                    notes: ''
                };
                addBusinessPartnerRow(newPartner);
            }

            function addBusinessPartnerRow(partner) {
                var rowId = partner.id || 'new_' + Date.now();
                var row = `
                    <tr id="partner_${rowId}">
                        <td>
                            <input type="text" class="form-control form-control-sm" 
                                   name="partnerName"
                                   value="${partner.partnerName || ''}" 
                                   onchange="updateBusinessPartner('${rowId}', 'partnerName', this.value)">
                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm" 
                                   name="role"
                                   value="${partner.role || ''}" 
                                   onchange="updateBusinessPartner('${rowId}', 'role', this.value)">
                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm" 
                                   name="contactInfo"
                                   value="${partner.contactInfo || ''}" 
                                   onchange="updateBusinessPartner('${rowId}', 'contactInfo', this.value)">
                        </td>
                        <td>
                            <input type="text" class="form-control form-control-sm" 
                                   name="notes"
                                   value="${partner.notes || ''}" 
                                   onchange="updateBusinessPartner('${rowId}', 'notes', this.value)">
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger btn-sm" 
                                    onclick="deleteBusinessPartner('${rowId}')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                `;
                $('#businessPartnersBody').append(row);
            }

            function updateBusinessPartner(rowId, field, value) {
                var isNew = rowId.startsWith('new_');
                var partnerId = isNew ? null : rowId;
                
                if (isNew) {
                    // Yeni kayıt oluştur
                    var partnerData = {
                        proposalId: '@proposal.Id',
                        partnerName: '',
                        role: '',
                        contactInfo: '',
                        notes: ''
                    };
                    
                    // Mevcut satırdaki değerleri al
                    var row = $(`#partner_${rowId}`);
                    partnerData.partnerName = row.find('input[onchange*="partnerName"]').val();
                    partnerData.role = row.find('input[onchange*="role"]').val();
                    partnerData.contactInfo = row.find('input[onchange*="contactInfo"]').val();
                    partnerData.notes = row.find('input[onchange*="notes"]').val();
                    
                    // Tüm alanlar dolu ise kaydet
                    if (partnerData.partnerName.trim() !== '' && partnerData.role.trim() !== '') {
                        $.ajax({
                            url: '/Proposals/CreateBusinessPartner',
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify(partnerData),
                            success: function(response) {
                                if (response.success) {
                                    // Satır ID'sini güncelle
                                    $(`#partner_${rowId}`).attr('id', `partner_${response.id}`);
                                    $(`#partner_${response.id} input`).each(function() {
                                        var onchange = $(this).attr('onchange');
                                        $(this).attr('onchange', onchange.replace(rowId, response.id));
                                    });
                                }
                            }
                        });
                    }
                } else {
                    // Mevcut kaydı güncelle
                    var partnerData = {
                        id: partnerId,
                        proposalId: '@proposal.Id',
                        partnerName: '',
                        role: '',
                        contactInfo: '',
                        notes: ''
                    };
                    
                    var row = $(`#partner_${rowId}`);
                    partnerData.partnerName = row.find('input[onchange*="partnerName"]').val();
                    partnerData.role = row.find('input[onchange*="role"]').val();
                    partnerData.contactInfo = row.find('input[onchange*="contactInfo"]').val();
                    partnerData.notes = row.find('input[onchange*="notes"]').val();
                    
                    $.ajax({
                        url: '/Proposals/UpdateBusinessPartner',
                        type: 'PUT',
                        contentType: 'application/json',
                        data: JSON.stringify(partnerData),
                        success: function(response) {
                            if (!response.success) {
                                console.error('Error updating business partner:', response.message);
                            }
                        }
                    });
                }
            }

            function deleteBusinessPartner(rowId) {
                var isNew = rowId.startsWith('new_');
                
                if (isNew) {
                    // Yeni satır ise sadece DOM'dan kaldır
                    $(`#partner_${rowId}`).remove();
                } else {
                    // Mevcut kayıt ise sunucudan sil
                    $.ajax({
                        url: '/Proposals/DeleteBusinessPartner',
                        type: 'DELETE',
                        data: { id: rowId },
                        success: function(response) {
                            if (response.success) {
                                $(`#partner_${rowId}`).remove();
                            } else {
                                console.error('Error deleting business partner:', response.message);
                            }
                        }
                    });
                }
            }

            // ===== RİSKLER =====
            function loadProposalRisks() {
                $.get('/Proposals/GetProposalRisks', { proposalId: '@proposal.Id' }, function(data) {
                    var tbody = $('#risksBody');
                    tbody.empty();
                    
                    if (data && data.length > 0) {
                        data.forEach(function(risk, index) {
                            addRiskRow(risk, index + 1);
                        });
                    } else {
                        // Initialize default risks if none exist
                        $.post('/Proposals/InitializeProposalRisks', { proposalId: '@proposal.Id' }, function() {
                            loadProposalRisks(); // Reload after initialization
                        });
                    }
                }).fail(function() {
                    console.error('Error loading proposal risks');
                });
            }

            function addRiskRow(risk, index) {
                var descriptionId = 'riskDesc_' + (risk.id || 'new_' + index);
                var charCountId = 'charCount_' + (risk.id || 'new_' + index);
                var currentLength = (risk.description || '').length;
                var maxLength = 500;
                
                var row = `
                    <tr data-risk-id="${risk.id || ''}">
                        <td class="text-center fw-bold">3.${index}</td>
                        <td>
                            <input type="text" class="form-control form-control-sm" 
                                   name="riskTitle_${risk.id}"
                                   value="${risk.title || ''}" 
                                   readonly 
                                   style="background-color: #f8f9fa; border: 1px solid #dee2e6;">
                        </td>
                        <td>
                            <div class="position-relative">
                                <textarea class="form-control form-control-sm auto-resize-textarea" 
                                          id="${descriptionId}"
                                          name="riskDescription_${risk.id}"
                                          rows="2"
                                          maxlength="${maxLength}"
                                          placeholder="Risk açıklamasını buraya yazın... (Maksimum ${maxLength} karakter)"
                                          style="resize: vertical; min-height: 50px;">${risk.description || ''}</textarea>
                                <small class="text-muted position-absolute" 
                                       style="bottom: 5px; right: 10px; font-size: 0.75rem;"
                                       id="${charCountId}">
                                    <span class="char-count">${currentLength}</span>/${maxLength}
                                </small>
                            </div>
                        </td>
                    </tr>
                `;
                $('#risksBody').append(row);
                
                // Textarea için event handler ekle
                $('#' + descriptionId).on('input', function() {
                    // Karakter sayacını güncelle
                    var currentLen = $(this).val().length;
                    $('#' + charCountId + ' .char-count').text(currentLen);
                    
                    // Renk değişimi (limite yaklaşınca)
                    if (currentLen > maxLength * 0.9) {
                        $('#' + charCountId).removeClass('text-muted').addClass('text-danger fw-bold');
                    } else if (currentLen > maxLength * 0.7) {
                        $('#' + charCountId).removeClass('text-muted text-danger').addClass('text-warning');
                    } else {
                        $('#' + charCountId).removeClass('text-warning text-danger').addClass('text-muted');
                    }
                    
                    // Auto-resize
                    autoResizeTextarea(this);
                });
                
                // İlk yüklemede de resize yap
                autoResizeTextarea($('#' + descriptionId)[0]);
            }
            
            // Textarea otomatik boyutlandırma fonksiyonu
            function autoResizeTextarea(textarea) {
                if (!textarea) return;
                
                textarea.style.height = 'auto';
                textarea.style.height = Math.max(textarea.scrollHeight, 50) + 'px';
            }
            
            // Akıllı metin alanlarını başlat
            function initSmartTextareas() {
                $('.smart-textarea').each(function() {
                    var $textarea = $(this);
                    var maxLength = parseInt($textarea.attr('maxlength')) || 1000;
                    var $charCounter = $textarea.parent().find('.char-counter .char-count');
                    
                    // Input event
                    $textarea.on('input', function() {
                        var currentLen = $(this).val().length;
                        $charCounter.text(currentLen);
                        
                        // Renk değişimi
                        var $counterElement = $(this).parent().find('.char-counter');
                        if (currentLen > maxLength * 0.9) {
                            $counterElement.removeClass('text-muted text-warning').addClass('text-danger fw-bold');
                        } else if (currentLen > maxLength * 0.7) {
                            $counterElement.removeClass('text-muted text-danger fw-bold').addClass('text-warning');
                        } else {
                            $counterElement.removeClass('text-warning text-danger fw-bold').addClass('text-muted');
                        }
                        
                        // Auto-resize
                        autoResizeTextarea(this);
                    });
                    
                    // İlk yüklemede resize
                    autoResizeTextarea(this);
                });
            }

            // Riskler formu submit
            $('#risksForm').on('submit', function(e) {
                e.preventDefault();
                
                var risks = [];
                $('#risksBody tr').each(function() {
                    var row = $(this);
                    var riskId = row.attr('data-risk-id');
                    var title = row.find('input[name^="riskTitle_"]').val();
                    var description = row.find('textarea[name^="riskDescription_"]').val();
                    
                    risks.push({
                        id: riskId || null,
                        proposalId: '@proposal.Id',
                        title: title,
                        description: description,
                        isApplicable: description && description.trim() !== '' ? true : null
                    });
                });
                
                var btn = $(this).find('button[type="submit"]');
                var original = btn.html();
                btn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-2"></span>Kaydediliyor...');
                
                $.ajax({
                    url: '/Proposals/SaveProposalRisks',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(risks),
                    success: function(response) {
                        btn.prop('disabled', false).html(original);
                        if (response.success) {
                            showSuccessMessage('Risk bilgileri başarıyla kaydedildi!');
                            
                            // Update proposal step to 4 if currently on step 3
                            var currentPageStep = @currentStep;
                            if (currentPageStep == 3) {
                                // Call UpdateSummary to advance to next step
                                $.ajax({
                                    url: '/Proposals/UpdateSummary/@proposal.Id',
                                    type: 'POST',
                                    data: {
                                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                                        Id: '@proposal.Id',
                                        CurrentStep: 3,
                                        NextStep: 4
                                    },
                                    success: function() {
                                        setTimeout(function() {
                                            window.location.reload();
                                        }, 1500);
                                    }
                                });
                            } else {
                                setTimeout(function() {
                                    window.location.reload();
                                }, 1500);
                            }
                        } else {
                            showValidationError(response.message || 'Bir hata oluştu');
                        }
                    },
                    error: function(xhr, status, error) {
                        btn.prop('disabled', false).html(original);
                        showValidationError('Kaydetme sırasında bir hata oluştu: ' + error);
                    }
                });
            });

        });
    </script>
}

<style>
    /* Progress Indicator Styles */
    .progress-container {
        padding: 20px 0;
    }
    
    .progress-line {
        position: absolute;
        top: 50%;
        left: 0;
        right: 0;
        height: 3px;
        background: #e9ecef;
        transform: translateY(-50%);
        z-index: 0;
    }
    
    .step-item {
        position: relative;
        z-index: 1;
        text-align: center;
        flex: 1;
    }
    
    .step-circle {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 10px;
        font-weight: bold;
        font-size: 1.2rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
        transition: all 0.3s ease;
    }
    
    .step-item.completed .step-circle {
        transform: scale(1.1);
    }
    
    .step-label {
        font-size: 0.85rem;
        font-weight: 600;
        color: #6c757d;
        margin-top: 8px;
    }
    
    .step-item.completed .step-label {
        color: #198754;
    }
    
    /* Accordion Styles */
    .accordion-button.disabled { 
        pointer-events: none; 
        opacity: .5;
        background-color: #f8f9fa !important;
        cursor: not-allowed;
    }
    
    .accordion-button:not(.collapsed) {
        background-color: #f8f9fa !important;
        border-color: #dee2e6 !important;
    }
    
    .accordion-button:focus {
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }
    
    /* Card Styles */
    .card {
        border: none;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        transition: all 0.3s ease;
    }
    
    .card:hover {
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    }
    
    /* Form Styles */
    .form-control, .form-select {
        border: 1px solid #ced4da;
        border-radius: 0.375rem;
        transition: all 0.3s ease;
    }
    
    .form-control:focus, .form-select:focus {
        border-color: #86b7fe;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }
    
    /* Table Styles */
    .table-hover tbody tr:hover {
        background-color: rgba(0, 0, 0, 0.075);
    }
    
    /* Button Styles */
    .btn {
        border-radius: 0.375rem;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    
    .btn:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    }
    
    /* Badge Styles */
    .badge {
        font-size: 0.75rem;
        font-weight: 600;
    }
    
    /* Alert Animations */
    .alert {
        animation: slideInRight 0.3s ease-out;
    }
    
    @@keyframes slideInRight {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
    
    /* Auto-resize Textarea Styles */
    .auto-resize-textarea,
    .smart-textarea {
        transition: height 0.2s ease;
        overflow-y: hidden;
        line-height: 1.5;
        padding-bottom: 30px !important; /* Karakter sayacı için yer */
        resize: vertical;
        min-height: 60px;
    }
    
    .auto-resize-textarea:focus,
    .smart-textarea:focus {
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.15);
        border-color: #86b7fe;
    }
    
    /* Karakter sayacı hover efekti */
    .auto-resize-textarea:focus + small,
    .smart-textarea:focus + .char-counter {
        font-weight: 600;
    }
    
    /* Karakter sayacı genel stil */
    .char-counter {
        background-color: rgba(255, 255, 255, 0.9);
        padding: 2px 6px;
        border-radius: 4px;
        transition: all 0.3s ease;
    }
    
    /* Risk tablosu textarea stilleri */
    #risksTable textarea {
        font-size: 0.9rem;
    }
    
    #risksTable td {
        vertical-align: top;
        padding: 0.75rem;
    }
    
    /* Status Dropdown in Edit Page */
    .status-dropdown-edit {
        font-weight: 500;
        border: 1px solid #d1d5db;
        background: white;
        transition: all 0.2s ease;
        cursor: pointer;
    }
    
    .status-dropdown-edit:hover {
        border-color: #9ca3af;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }
    
    .status-dropdown-edit:focus {
        border-color: #3b82f6;
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        outline: none;
    }
    
    .status-dropdown-edit:disabled {
        opacity: 0.5;
        cursor: not-allowed;
        background-color: #f9fafb;
    }
</style>














